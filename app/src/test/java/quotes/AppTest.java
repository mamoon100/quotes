/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package quotes;

import com.google.gson.Gson;
import com.google.gson.stream.JsonReader;
import org.junit.jupiter.api.Test;

import java.io.FileReader;
import java.io.IOException;
import java.net.HttpURLConnection;
import java.net.URL;
import java.util.ArrayList;

import static org.junit.jupiter.api.Assertions.*;

class AppTest {


    @Test
    public void quoteTest() {

        try {
            ArrayList<Qoute> testingQuotes = new ArrayList<>();
            Gson gson = new Gson();
            JsonReader reader = new JsonReader(new FileReader("src/test/resources/recentquotes.json"));
            reader.beginArray();
            while (reader.hasNext()) {
                Qoute qoute = gson.fromJson(reader, Qoute.class);
                testingQuotes.add(qoute);
            }
            reader.endArray();
            ArrayList<String> arr = new ArrayList<>();
            arr.add("attributed-no-source");
            Qoute testing = new Qoute(arr, "Marilyn Monroe", "18651 likes", " “I am good, but not an angel. I do sin, but I am not the devil. I am just a small girl in a big world trying to find someone to love.” ");
            assertEquals(testing.getAuthor(), testingQuotes.get(0).getAuthor(), "There was an error parsing the file");
            assertEquals(testing.getLikes(), testingQuotes.get(0).getLikes(), "There was an error parsing the file");
            assertEquals(testing.getText(), testingQuotes.get(0).getText(), "There was an error parsing the file");
            assertEquals(testing.getTags(), testingQuotes.get(0).getTags(), "There was an error parsing the file");

        } catch (IOException e) {
            e.printStackTrace();
            assertTrue(false, "There was an error loading the file or the path is not vaild");
        }
    }

    @Test
    public void wordAndAuthorTest() {
        try {
            ArrayList<Qoute> testingQuotes = new ArrayList<>();
            Gson gson = new Gson();
            JsonReader reader = new JsonReader(new FileReader("src/test/resources/recentquotes.json"));
            reader.beginArray();
            while (reader.hasNext()) {
                Qoute qoute = gson.fromJson(reader, Qoute.class);
                testingQuotes.add(qoute);
            }
            reader.endArray();
            ArrayList<Qoute> authorFromMain = App.qouteByAuthor("Charles", testingQuotes);
            ArrayList<Qoute> wordFromMain = App.qouteByWord("do", testingQuotes);
            int randomAuthIndex = (int) (Math.random() * authorFromMain.size());
            int randomWordIndex = (int) (Math.random() * wordFromMain.size());
            ArrayList<Qoute> tempAuthQoute = new ArrayList<>();
            for (Qoute q : testingQuotes) if (q.getAuthor().contains("Charles")) tempAuthQoute.add(q);
            ArrayList<Qoute> tempWordQoute = new ArrayList<>();
            for (Qoute q : testingQuotes) if (q.getText().contains("do")) tempWordQoute.add(q);
            assertEquals(tempAuthQoute.size(), authorFromMain.size(), "The size of the two list ar not the same");
            assertEquals(tempWordQoute.size(), wordFromMain.size(), "The size of the two list ar not the same");
            assertEquals(authorFromMain.get(randomAuthIndex), tempAuthQoute.get(randomAuthIndex), "the order of the two list are not the same");
            assertEquals(wordFromMain.get(randomWordIndex), tempWordQoute.get(randomWordIndex), "the order of the two list are not the same");
        } catch (IOException e) {
            e.printStackTrace();
            assertTrue(false);
        }

    }

    @Test
    public void onlineTest() {
        String site = "http://api.forismatic.com/api/1.0/?method=getQuote&format=json&lang=en";
        HttpURLConnection con = null;
        try {
            URL url = new URL(site);
            con = (HttpURLConnection) url.openConnection();
        } catch (IOException e) {
            e.printStackTrace();
            assertTrue(false);
        }
        assertEquals(App.getResCode(con), 200, "There was a problem in getting the response code");

    }


}
